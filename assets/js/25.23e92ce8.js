(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{300:function(e,t,n){"use strict";n.r(t);var a=n(13),l=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"_1-表格"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-表格"}},[e._v("#")]),e._v(" 1.表格")]),e._v(" "),t("h3",{attrs:{id:"序号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#序号"}},[e._v("#")]),e._v(" 序号")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('type="index"\n<el-table-column type="index" label="序号" width="80px" align="center" />\n')])])]),t("h3",{attrs:{id:"展示图片等其他内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示图片等其他内容"}},[e._v("#")]),e._v(" 展示图片等其他内容")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    <el-table :data="tradeMarkList" style="width: 100%" border>\n      <el-table-column type="index" label="序号" width="80px" align="center" />\n      <el-table-column prop="tmName" label="品牌名称" width="widtn" />\n      <el-table-column prop="logoUrl" label="品牌LOGO" width="width" >\n        <template slot-scope="{row, $index}">\n          <img :src="row.logoUrl" style="width: 100px; height: 100px">\n        </template>\n      </el-table-column>\n      <el-table-column prop="address" label="操作" width="width" />\n    </el-table>\n    row 是列对象，index是列的索引\n')])])]),t("h2",{attrs:{id:"_2-表格和分页器综合应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-表格和分页器综合应用"}},[e._v("#")]),e._v(" 2.表格和分页器综合应用")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<template>\n  <div>\n    <el-button type="primary" icon="el-icon-plus" style="margin:10px 0px">添加</el-button>\n    <el-table :data="tradeMarkList" style="width: 100%" border>\n      <el-table-column type="index" label="序号" width="80px" align="center" />\n      <el-table-column prop="tmName" label="品牌名称" width="widtn" />\n      <el-table-column prop="logoUrl" label="品牌LOGO" width="width" >\n        <template slot-scope="{row, $index}">\n          <img :src="row.logoUrl" style="width: 100px; height: 100px">\n        </template>\n      </el-table-column>\n      <el-table-column prop="prop" label="操作" width="width" >\n        <template slot-scope="{row, $index}">\n          <el-button type="warning" icon="el-icon-edit" size="mini">编辑</el-button>\n          <el-button type="danger" icon="el-icon-delete" size="mini">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      style="margin-top: 20px; text-align: center"\n      :current-page="page"\n      :total="total"\n      :page-size="limit"\n      :page-sizes="[3, 5, 10]"\n      :pager-count="7"\n      layout="sizes,total,prev, pager, next, jumper"\n      @current-change="getPageList"\n      @size-change="handlerSizeChange"\n    />\n</div>\n</template>\n\n<script>\n\nexport default {\n  name: \'tradeMark\',\n  data(){\n    return{\n      page:1,\n      limit: 5,\n      tradeMarkList: [],\n      total: 0,\n    }\n  },\n  mounted() {\n    this.getPageList();\n  },\n  methods:{\n    async getPageList(pager = 1){\n      this.page = pager;\n      const {page, limit} = this;\n      let res = await this.$API.tradeMark.reqTradeMarkList(page, limit);\n      if(res.code == 200){\n        this.tradeMarkList = res.data.records;\n        this.total = res.data.total;\n      }\n    },\n    handlerSizeChange(limit){\n      this.limit = limit;\n      this.getPageList();\n    },\n\n  }\n}\n<\/script>\n\n<style scoped>\n</style>\n\n')])])]),t("h2",{attrs:{id:"_3-表格的增删改查操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-表格的增删改查操作"}},[e._v("#")]),e._v(" 3.表格的增删改查操作")]),e._v(" "),t("p",[e._v("Dialog 对话框实现增加和修改   表单验证 MessageBox 弹框实现数据删除")]),e._v(" "),t("h4",{attrs:{id:"表单验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表单验证"}},[e._v("#")]),e._v(" 表单验证")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('rules 属性传入约定的验证规则，Form-Item 的 prop 属性设置为需校验的字段名\n\nrules\n！！！！:model="ruleForm" :rules="rules" ref="ruleForm"！！！！这个必须要\n\nprop="name" 必须要\n函数\nthis.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert(\'submit!\');\n          } else {\n            console.log(\'error submit!!\');\n            return false;\n          }});\n\n')])])]),t("h4",{attrs:{id:"案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[e._v("#")]),e._v(" 案例")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<template>\n  <div>\n    <el-button type="primary" icon="el-icon-plus" @click="showDialog" style="margin:10px 0px">添加</el-button>\n    <el-table :data="tradeMarkList" style="width: 100%" border>\n      <el-table-column type="index" label="序号" width="80px" align="center"/>\n      <el-table-column prop="tmName" label="品牌名称" width="widtn"/>\n      <el-table-column prop="logoUrl" label="品牌LOGO" width="width">\n        <template slot-scope="{row, $index}">\n          <img :src="row.logoUrl" style="width: 100px; height: 100px">\n        </template>\n      </el-table-column>\n      <el-table-column prop="prop" label="操作" width="width">\n        <template slot-scope="{row, $index}">\n          <el-button type="warning" icon="el-icon-edit" @click="updateTradeMark(row)" size="mini">修改</el-button>\n          <el-button type="danger" icon="el-icon-delete" @click="open(row)" size="mini">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      style="margin-top: 20px; text-align: center"\n      :current-page="page"\n      :total="total"\n      :page-size="limit"\n      :page-sizes="[3, 5, 10]"\n      :pager-count="7"\n      layout="sizes,total,prev, pager, next, jumper"\n      @current-change="getPageList"\n      @size-change="handlerSizeChange"\n    />\n    \x3c!--    对话框--\x3e\n    <el-dialog :title="tmForm.id?\'修改品牌\':\'添加品牌\'" :visible.sync="dialogFormVisible">\n      <el-form :model="tmForm" ref="ruleForm" :rules="rules" style="width: 80%">\n        <el-form-item prop="tmName" label="品牌名称" label-width="100px">\n          <el-input v-model="tmForm.tmName" autocomplete="off"></el-input>\n        </el-form-item>\n        <el-form-item prop="logoUrl" label="品牌LOGO" label-width="100px">\n          \x3c!--          使用回调来收集参数--\x3e\n          <el-upload\n            class="avatar-uploader"\n            action="/dev-api/admin/product/fileUpload"\n            :show-file-list="false"\n            :on-success="handleAvatarSuccess"\n            :before-upload="beforeAvatarUpload"\n          >\n            <img v-if="imageUrl" :src="tmForm.logoUrl" class="avatar">\n            <i v-else class="el-icon-plus avatar-uploader-icon"></i>\n            <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <div slot="footer" class="dialog-footer">\n        <el-button @click="dialogFormVisible = false">取 消</el-button>\n        <el-button type="primary" @click="addOrUpdateTradeMark">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \'tradeMark\',\n  data() {\n    return {\n      page: 1,\n      limit: 5,\n      tradeMarkList: [],\n      total: 0,\n      dialogFormVisible: false,\n      imageUrl: \'\',\n      tmForm: {\n        id: \'\',\n        logoUrl: \'\',\n        tmName: \'\'\n      },\n      rules: {\n        tmName: [\n          { required: true, message: \'请输人品牌名称\', trigger: \'blur\' },\n          { min: 2, max: 10, message: \'长度在 2 到 10 个字符\', trigger: \'change\' }\n        ],\n        logoUrl: [\n          { required: true, message: \'请选择品牌的图片\', trigger: \'change\' }\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.getPageList()\n  },\n  methods: {\n    async getPageList(pager = 1) {\n      this.page = pager\n      const { page, limit } = this\n      let res = await this.$API.tradeMark.reqTradeMarkList(page, limit)\n      if (res.code == 200) {\n        this.tradeMarkList = res.data.records\n        this.total = res.data.total\n      }\n    },\n    handlerSizeChange(limit) {\n      this.limit = limit\n      this.getPageList()\n    },\n    showDialog() {\n      this.tmForm = { tmName: \'\', logoUrl: \'\' }\n      this.dialogFormVisible = true\n    },\n    updateTradeMark(row) {\n      this.dialogFormVisible = true\n      // 浅拷贝\n      this.tmForm = { ...row }\n\n    },\n    handleAvatarSuccess(res, file) {\n      this.imageUrl = URL.createObjectURL(file.raw)\n      this.tmForm.logoUrl = res.data\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type === \'image/jpeg\'\n      const isLt2M = file.size / 1024 / 1024 < 2\n\n      if (!isJPG) {\n        this.$message.error(\'上传头像图片只能是 JPG 格式!\')\n      }\n      if (!isLt2M) {\n        this.$message.error(\'上传头像图片大小不能超过 2MB!\')\n      }\n      return isJPG && isLt2M\n    },\n    addOrUpdateTradeMark() {\n      this.$refs.ruleForm.validate(async(valid) => {\n        if (valid) {\n          this.dialogFormVisible = false\n          let res = await this.$API.tradeMark.reqAddOrUpdateTradeMark(this.tmForm)\n          if (res.code == 200) {\n            this.$message({\n              message: this.tmForm.id ? \'修改成功\' : \'添加成功\',\n              type: \'success\'\n            })\n            // 如果是修改品牌 留在当前页\n            this.getPageList(this.tmForm.id ? this.page : 1)\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    open(row) {\n      console.log(row)\n      this.$confirm(\'你确定要删除品牌\' + row.tmName + \'吗？\', \'提示\', {\n        confirmButtonText: \'确定\',\n        cancelButtonText: \'取消\',\n        type: \'warning\'\n      }).then(async() => {\n        let res = await this.$API.tradeMark.reqRemoveTradeMark(row.id)\n        if (res.code == 200) {\n          this.$message({\n            type: \'success\',\n            message: \'删除成功!\'\n          })\n          this.getPageList(this.tradeMarkList.length > 1 ? this.page : this.page - 1)\n        }\n      }).catch(() => {\n        this.$message({\n          type: \'info\',\n          message: \'已取消删除\'\n        })\n      })\n    }\n  }\n}\n<\/script>\n')])])]),t("h2",{attrs:{id:"_4-子组件发请求时机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-子组件发请求时机"}},[e._v("#")]),e._v(" 4.子组件发请求时机")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('子组件里面写方法 父组件帮子调\n\n父\n    <SpuForm @changeScene="changeScene" v-show="scene == 1"  ref="spu"></SpuForm>\n    // 修改spu回调\n    updateSpu(row) {\n      this.scene = 1\n      // 获取子组件\n      // 子组件里面写方法 父组件帮子调\n      this.$refs.spu.initSpuData()\n    },\n子\n    initSpuData() {\n      console.log("123")\n    }\n      \n      \n')])])]),t("h2",{attrs:{id:"_5-ref"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-ref"}},[e._v("#")]),e._v(" 5.ref")])])}),[],!1,null,null,null);t.default=l.exports}}]);